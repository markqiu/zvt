# -*- coding: utf-8 -*-
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.ext.declarative import declarative_base

from zvt.contract.register import register_schema
from zvt.domain.quotes import StockPershareFactorCommon

FactorBase = declarative_base()


class StockPershareFactor(FactorBase, StockPershareFactorCommon):
    @classmethod
    def important_cols(cls):
        return [
            'capital_reserve_fund_per_share', 'cashflow_per_share_ttm',
            'cash_and_equivalents_per_share', 'eps_ttm', 'net_asset_per_share', 'net_operate_cash_flow_per_share',
            'operating_profit_per_share',
            'operating_profit_per_share_ttm', 'operating_revenue_per_share', 'operating_revenue_per_share_ttm',
            'retained_earnings_per_share', 'retained_profit_per_share',
            'surplus_reserve_fund_per_share', 'total_operating_revenue_per_share',
            'total_operating_revenue_per_share_ttm'
        ]

    __tablename__ = 'stock_pershare_factor'


register_schema(providers=['joinquant'], db_name='stock_pershare_factor', schema_base=FactorBase)

__all__ = ['StockPershareFactor']
