# -*- coding: utf-8 -*-
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.ext.declarative import declarative_base

from zvt.contract.register import register_schema
from zvt.domain.quotes import StockPershareFactorCommon

FactorBase = declarative_base()


class StockPershareFactor(FactorBase, StockPershareFactorCommon):
    @classmethod
    def important_cols(cls):
        return [
        "capital_reserve_fund_per_share",  # 每股资本公积金
        "cashflow_per_share_ttm",  # 每股现金流量净额，根据当时日期来获取最近变更日的总股本
        "cash_and_equivalents_per_share",  # 每股现金及现金等价物余额
        "eps_ttm",  # 每股收益TTM
        "net_asset_per_share",  # 每股净资产
        "net_operate_cash_flow_per_share",  # 每股经营活动产生的现金流量净额
        "operating_profit_per_share",  # 每股营业利润
        "operating_profit_per_share_ttm",  # 每股营业利润TTM
        "operating_revenue_per_share",  # 每股营业收入
        "operating_revenue_per_share_ttm",  # 每股营业收入TTM
        "retained_earnings_per_share",  # 每股留存收益
        "retained_profit_per_share",  # 每股未分配利润
        "surplus_reserve_fund_per_share",  # 每股盈余公积金
        "total_operating_revenue_per_share",  # 每股营业总收入
        "total_operating_revenue_per_share_ttm",  # 每股营业总收入TTM
        ]

    __tablename__ = 'stock_pershare_factor'


register_schema(providers=['joinquant'], db_name='stock_pershare_factor', schema_base=FactorBase)

__all__ = ['StockPershareFactor']
