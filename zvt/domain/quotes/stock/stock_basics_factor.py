# -*- coding: utf-8 -*-
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.ext.declarative import declarative_base

from zvt.contract.register import register_schema
from zvt.domain.quotes import StockBasicsFactorCommon

FactorBase = declarative_base()


class StockBasicsFactor(FactorBase, StockBasicsFactorCommon):
    @classmethod
    def important_cols(cls):
        return ['administration_expense_ttm', 'asset_impairment_loss_ttm',
                'cash_flow_to_price_ratio', 'circulating_market_cap',
                'EBIT', 'EBITDA', 'financial_assets', 'financial_expense_ttm',
                'financial_liability', 'goods_sale_and_service_render_cash_ttm',
                'gross_profit_ttm', 'interest_carry_current_liability',
                'interest_free_current_liability', 'market_cap',
                'net_debt', 'net_finance_cash_flow_ttm', 'net_interest_expense',
                'net_invest_cash_flow_ttm', 'net_operate_cash_flow_ttm',
                'net_profit_ttm', 'net_working_capital',
                'non_operating_net_profit_ttm', 'non_recurring_gain_loss',
                'np_parent_company_owners_ttm', 'OperateNetIncome',
                'operating_assets', 'operating_cost_ttm',
                'operating_liability', 'operating_profit_ttm',
                'operating_revenue_ttm', 'retained_earnings',
                'sales_to_price_ratio', 'sale_expense_ttm', 'total_operating_cost_ttm',
                'total_operating_revenue_ttm', 'total_profit_ttm',
                'value_change_profit_ttm']

    __tablename__ = 'stock_basics_factor'


register_schema(providers=['joinquant'], db_name='stock_basics_factor', schema_base=FactorBase)

__all__ = ['StockBasicsFactor']
